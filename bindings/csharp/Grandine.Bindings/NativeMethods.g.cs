// <auto-generated>
// This code is generated by csbindgen.
// DON'T CHANGE THIS DIRECTLY.
// </auto-generated>
#pragma warning disable CS8500
#pragma warning disable CS8981
using System;
using System.Runtime.InteropServices;


namespace Grandine.Native
{
    public static unsafe partial class NativeMethods
    {
        const string __DllName = "grandine";





        [DllImport(__DllName, EntryPoint = "grandine_set_execution_layer_adapter", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void grandine_set_execution_layer_adapter(CEmbedAdapter adapter);

        [DllImport(__DllName, EntryPoint = "grandine_run", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern ulong grandine_run(ulong argc, byte** argv);


    }

    [StructLayout(LayoutKind.Sequential)]
    public unsafe partial struct CResultCPayloadStatusV1
    {
        public CPayloadStatusV1 value;
        public ulong error;
    }

    [StructLayout(LayoutKind.Sequential)]
    public unsafe partial struct CResultCForkChoiceUpdatedResponse
    {
        public CForkChoiceUpdatedResponse value;
        public ulong error;
    }

    [StructLayout(LayoutKind.Sequential)]
    public unsafe partial struct CResultCExecutionPayloadV1
    {
        public CExecutionPayloadV1 value;
        public ulong error;
    }

    [StructLayout(LayoutKind.Sequential)]
    public unsafe partial struct CResultCEngineGetPayloadV2Response
    {
        public CEngineGetPayloadV2Response value;
        public ulong error;
    }

    [StructLayout(LayoutKind.Sequential)]
    public unsafe partial struct CResultCEngineGetPayloadV3Response
    {
        public CEngineGetPayloadV3Response value;
        public ulong error;
    }

    [StructLayout(LayoutKind.Sequential)]
    public unsafe partial struct CResultCEngineGetPayloadV4Response
    {
        public CEngineGetPayloadV4Response value;
        public ulong error;
    }

    [StructLayout(LayoutKind.Sequential)]
    public unsafe partial struct CTransaction
    {
        public byte* bytes;
        public ulong bytes_len;
    }

    [StructLayout(LayoutKind.Sequential)]
    public unsafe partial struct CExecutionPayloadV1
    {
        public fixed byte parent_hash[32];
        public fixed byte fee_recipient[20];
        public fixed byte state_root[32];
        public fixed byte receipts_root[32];
        public byte* logs_bloom;
        public ulong logs_bloom_len;
        public fixed byte prev_randao[32];
        public ulong block_number;
        public ulong gas_limit;
        public ulong gas_used;
        public ulong timestamp;
        public byte* extra_data;
        public ulong extra_data_len;
        public fixed byte base_fee_per_gas[32];
        public fixed byte block_hash[32];
        public CTransaction* transactions;
        public ulong transactions_len;
    }

    [StructLayout(LayoutKind.Sequential)]
    public unsafe partial struct CWithdrawalV1
    {
        public ulong index;
        public ulong validator_index;
        public fixed byte address[20];
        public ulong amount;
    }

    [StructLayout(LayoutKind.Sequential)]
    public unsafe partial struct CExecutionPayloadV2
    {
        public fixed byte parent_hash[32];
        public fixed byte fee_recipient[20];
        public fixed byte state_root[32];
        public fixed byte receipts_root[32];
        public byte* logs_bloom;
        public ulong logs_bloom_len;
        public fixed byte prev_randao[32];
        public ulong block_number;
        public ulong gas_limit;
        public ulong gas_used;
        public ulong timestamp;
        public byte* extra_data;
        public ulong extra_data_len;
        public fixed byte base_fee_per_gas[32];
        public fixed byte block_hash[32];
        public CTransaction* transactions;
        public ulong transactions_len;
        public CWithdrawalV1* withdrawals;
        public ulong withdrawals_len;
    }

    [StructLayout(LayoutKind.Sequential)]
    public unsafe partial struct CExecutionPayloadV3
    {
        public fixed byte parent_hash[32];
        public fixed byte fee_recipient[20];
        public fixed byte state_root[32];
        public fixed byte receipts_root[32];
        public byte* logs_bloom;
        public ulong logs_bloom_len;
        public fixed byte prev_randao[32];
        public ulong block_number;
        public ulong gas_limit;
        public ulong gas_used;
        public ulong timestamp;
        public byte* extra_data;
        public ulong extra_data_len;
        public fixed byte base_fee_per_gas[32];
        public fixed byte block_hash[32];
        public CTransaction* transactions;
        public ulong transactions_len;
        public CWithdrawalV1* withdrawals;
        public ulong withdrawals_len;
        public ulong blob_gas_used;
        public ulong excess_blob_gas;
    }

    [StructLayout(LayoutKind.Sequential)]
    public unsafe partial struct CH384
    {
        public fixed byte Item1[48];
    }

    [StructLayout(LayoutKind.Sequential)]
    public unsafe partial struct CH256
    {
        public fixed byte Item1[32];
    }

    [StructLayout(LayoutKind.Sequential)]
    public unsafe partial struct COptionCH256
    {
        [MarshalAs(UnmanagedType.U1)] public bool is_something;
        public CH256 value;
    }

    [StructLayout(LayoutKind.Sequential)]
    public unsafe partial struct COptionCH64
    {
        [MarshalAs(UnmanagedType.U1)] public bool is_something;
        public CH64 value;
    }

    [StructLayout(LayoutKind.Sequential)]
    public unsafe partial struct COptionCPayloadAttributesV1
    {
        [MarshalAs(UnmanagedType.U1)] public bool is_something;
        public CPayloadAttributesV1 value;
    }

    [StructLayout(LayoutKind.Sequential)]
    public unsafe partial struct COptionCPayloadAttributesV2
    {
        [MarshalAs(UnmanagedType.U1)] public bool is_something;
        public CPayloadAttributesV2 value;
    }

    [StructLayout(LayoutKind.Sequential)]
    public unsafe partial struct COptionCPayloadAttributesV3
    {
        [MarshalAs(UnmanagedType.U1)] public bool is_something;
        public CPayloadAttributesV3 value;
    }

    [StructLayout(LayoutKind.Sequential)]
    public unsafe partial struct CPayloadStatusV1
    {
        public CPayloadValidationStatus status;
        public COptionCH256 latest_valid_hash;
    }

    [StructLayout(LayoutKind.Sequential)]
    public unsafe partial struct CForkChoiceStateV1
    {
        public fixed byte head_block_hash[32];
        public fixed byte safe_block_hash[32];
        public fixed byte finalized_block_hash[32];
    }

    [StructLayout(LayoutKind.Sequential)]
    public unsafe partial struct CPayloadAttributesV1
    {
        public ulong timestamp;
        public fixed byte prev_randao[32];
        public fixed byte suggested_fee_recipient[20];
    }

    [StructLayout(LayoutKind.Sequential)]
    public unsafe partial struct CPayloadAttributesV2
    {
        public ulong timestamp;
        public fixed byte prev_randao[32];
        public fixed byte suggested_fee_recipient[20];
        public CWithdrawalV1* withdrawals;
        public ulong withdrawals_len;
    }

    [StructLayout(LayoutKind.Sequential)]
    public unsafe partial struct CPayloadAttributesV3
    {
        public ulong timestamp;
        public fixed byte prev_randao[32];
        public fixed byte suggested_fee_recipient[20];
        public CWithdrawalV1* withdrawals;
        public ulong withdrawals_len;
        public fixed byte parent_beacon_block_root[32];
    }

    [StructLayout(LayoutKind.Sequential)]
    public unsafe partial struct CH64
    {
        public fixed byte Item1[8];
    }

    [StructLayout(LayoutKind.Sequential)]
    public unsafe partial struct CForkChoiceUpdatedResponse
    {
        public CPayloadStatusV1 payload_status;
        public COptionCH64 payload_id;
    }

    [StructLayout(LayoutKind.Sequential)]
    public unsafe partial struct CRequest
    {
        public byte* bytes;
        public ulong bytes_len;
    }

    [StructLayout(LayoutKind.Sequential)]
    public unsafe partial struct CExecutionRequests
    {
        public CRequest* requests;
        public ulong requests_len;
    }

    [StructLayout(LayoutKind.Sequential)]
    public unsafe partial struct CBlobAndProofV2
    {
        public CH384* proof;
        public byte* blob;
    }

    [StructLayout(LayoutKind.Sequential)]
    public unsafe partial struct CBlobAndProofV1
    {
        public CH384 proof;
        public byte* blob;
    }

    [StructLayout(LayoutKind.Sequential)]
    public unsafe partial struct COptionCBlobAndProofV1
    {
        [MarshalAs(UnmanagedType.U1)] public bool is_something;
        public CBlobAndProofV1 value;
    }

    [StructLayout(LayoutKind.Sequential)]
    public unsafe partial struct CVecCOptionCBlobAndProofV1
    {
        public COptionCBlobAndProofV1* data;
        public ulong data_len;
    }

    [StructLayout(LayoutKind.Sequential)]
    public unsafe partial struct CResultCVecCOptionCBlobAndProofV1
    {
        public CVecCOptionCBlobAndProofV1 value;
        public ulong error;
    }

    [StructLayout(LayoutKind.Sequential)]
    public unsafe partial struct CVecCBlobAndProofV2
    {
        public CBlobAndProofV2* data;
        public ulong data_len;
    }

    [StructLayout(LayoutKind.Sequential)]
    public unsafe partial struct COptionCVecCBlobAndProofV2
    {
        [MarshalAs(UnmanagedType.U1)] public bool is_something;
        public CVecCBlobAndProofV2 value;
    }

    [StructLayout(LayoutKind.Sequential)]
    public unsafe partial struct CResultCOptionCVecCBlobAndProofV2
    {
        public COptionCVecCBlobAndProofV2 value;
        public ulong error;
    }

    [StructLayout(LayoutKind.Sequential)]
    public unsafe partial struct CEngineGetPayloadV2Response
    {
        public CExecutionPayloadV2 execution_payload;
        public fixed byte block_value[32];
    }

    [StructLayout(LayoutKind.Sequential)]
    public unsafe partial struct CBlobsBundleV1
    {
        public byte** commitments;
        public ulong commitments_len;
        public byte** proofs;
        public ulong proofs_len;
        public byte** blobs;
        public ulong blobs_len;
    }

    [StructLayout(LayoutKind.Sequential)]
    public unsafe partial struct CEngineGetPayloadV3Response
    {
        public CExecutionPayloadV3 execution_payload;
        public fixed byte block_value[32];
        public CBlobsBundleV1 blobs_bundle;
        [MarshalAs(UnmanagedType.U1)] public bool should_override_builder;
    }

    [StructLayout(LayoutKind.Sequential)]
    public unsafe partial struct CEngineGetPayloadV4Response
    {
        public CExecutionPayloadV3 execution_payload;
        public fixed byte block_value[32];
        public CBlobsBundleV1 blobs_bundle;
        [MarshalAs(UnmanagedType.U1)] public bool should_override_builder;
        public CExecutionRequests execution_requests;
    }

    [StructLayout(LayoutKind.Sequential)]
    public unsafe partial struct CEngineGetPayloadV5Response
    {
        public CExecutionPayloadV3 execution_payload;
        public fixed byte block_value[32];
        public CBlobsBundleV1 blobs_bundle;
        [MarshalAs(UnmanagedType.U1)] public bool should_override_builder;
        public CExecutionRequests execution_requests;
    }

    [StructLayout(LayoutKind.Sequential)]
    public unsafe partial struct CResultCEngineGetPayloadV5Response
    {
        public CEngineGetPayloadV5Response value;
        public ulong error;
    }

    [StructLayout(LayoutKind.Sequential)]
    public unsafe partial struct CEmbedAdapter
    {
        public delegate* unmanaged[Cdecl]<CExecutionPayloadV1, CResultCPayloadStatusV1> engine_new_payload_v1;
        public delegate* unmanaged[Cdecl]<CExecutionPayloadV2, CResultCPayloadStatusV1> engine_new_payload_v2;
        public delegate* unmanaged[Cdecl]<CExecutionPayloadV3, byte**, ulong, byte*, CResultCPayloadStatusV1> engine_new_payload_v3;
        public delegate* unmanaged[Cdecl]<CExecutionPayloadV3, byte**, ulong, byte*, CExecutionRequests, CResultCPayloadStatusV1> engine_new_payload_v4;
        public delegate* unmanaged[Cdecl]<CForkChoiceStateV1, COptionCPayloadAttributesV1, CResultCForkChoiceUpdatedResponse> engine_forkchoice_updated_v1;
        public delegate* unmanaged[Cdecl]<CForkChoiceStateV1, COptionCPayloadAttributesV2, CResultCForkChoiceUpdatedResponse> engine_forkchoice_updated_v2;
        public delegate* unmanaged[Cdecl]<CForkChoiceStateV1, COptionCPayloadAttributesV3, CResultCForkChoiceUpdatedResponse> engine_forkchoice_updated_v3;
        public delegate* unmanaged[Cdecl]<byte*, CResultCExecutionPayloadV1> engine_get_payload_v1;
        public delegate* unmanaged[Cdecl]<byte*, CResultCEngineGetPayloadV2Response> engine_get_payload_v2;
        public delegate* unmanaged[Cdecl]<byte*, CResultCEngineGetPayloadV3Response> engine_get_payload_v3;
        public delegate* unmanaged[Cdecl]<byte*, CResultCEngineGetPayloadV4Response> engine_get_payload_v4;
        public delegate* unmanaged[Cdecl]<byte*, CResultCEngineGetPayloadV5Response> engine_get_payload_v5;
        public delegate* unmanaged[Cdecl]<byte**, ulong, CResultCVecCOptionCBlobAndProofV1> engine_get_blobs_v1;
        public delegate* unmanaged[Cdecl]<byte**, ulong, CResultCOptionCVecCBlobAndProofV2> engine_get_blobs_v2;
    }


    public enum CPayloadValidationStatus : byte
    {
        Valid = 0,
        Invalid,
        Syncing,
        Accepted,
        InvalidBlockHash,
    }


}
