{"project_name": "VeChainThor", "project_category": "L2", "attack_title": "VTHO Accrual Bypass via Self-Destruct Logic Flaw", "vulnerability_type": "SWC-135 — Incorrect Calculation", "date_of_report": "2024-12-12", "bounty_paid_usd": 50000, "impact_profit_usd": 0, "profit_token": {"token": "VTHO", "amount": "unlimited"}, "reproduction_steps": ["1. Borrow large amount of VET using flash loans from VeChain DEXes", "2. Create contract that triggers self-destruct operation via OnSuicideContract", "3. Exploit flaw where VTHO settlement is skipped when sent amount is zero", "4. Repeatedly invoke self-destruct events using flash loans to compound artificially minted VTHO", "5. Accumulate excessive VTHO leading to direct loss of funds"], "required_prerequisites": ["Flash loan liquidity from VeChain DEXes", "Contract deployment capability", "Understanding of VeChainThor dual-token model"], "contract_addresses": ["0x0000000000000000000000000000456E65726779"], "attack_tx_hashes": ["0x0000000000000000000000000000000000000000000000000000000000000000"], "sources": ["https://immunefi.com/blog/all/vechainthor-vtho-accrual-bypass-bug-fix-review/", "https://github.com/vechain/thor"], "poc_links": ["https://immunefi.com/blog/all/vechainthor-vtho-accrual-bypass-bug-fix-review/"], "swc_id": "SWC-135", "notes": "Critical vulnerability in VeChainThor's dual-token economic model. Flaw in OnSuicideContract function allowed bypassing VTHO settlement when transfer amount was zero. Combined with flash loans, attackers could artificially mint unlimited VTHO tokens. Reported by @nnez, one of top 50 whitehats on Immunefi. Fixed by ensuring VTHO settlement occurs regardless of transfer amount."}


{"project_name": "Polygon", "project_category": "L2", "attack_title": "Lack of Balance Check in MRC20 transferWithSig Function", "vulnerability_type": "SWC-105 — Unprotected Ether Withdrawal", "date_of_report": "2021-12-03", "bounty_paid_usd": 2200000, "impact_profit_usd": 9276584332, "profit_token": {"token": "MATIC", "amount": "9276584332"}, "reproduction_steps": ["1. Create byte string of length other than 65 to make ecrecovery return zero address", "2. Set amount to full balance of MRC20 contract", "3. Set to address as attacker address", "4. Call transferWithSig() with invalid signature", "5. Function proceeds without valid signature due to missing zero address check", "6. _transferFrom() calls _transfer() without balance verification", "7. All MATIC tokens transferred from MRC20 contract to attacker"], "required_prerequisites": ["Understanding of ECDSA signature verification", "Knowledge of MRC20 contract structure", "Ability to craft invalid signatures"], "contract_addresses": ["0x0000000000000000000000000000000000001010"], "attack_tx_hashes": ["0x0000000000000000000000000000000000000000000000000000000000000001"], "sources": ["https://medium.com/immunefi/polygon-lack-of-balance-check-bugfix-postmortem-2-2m-bounty-64ec66c24c7d", "https://immunefi.com/bug-bounty/polygon/"], "poc_links": ["https://medium.com/immunefi/polygon-lack-of-balance-check-bugfix-postmortem-2-2m-bounty-64ec66c24c7d"], "swc_id": "SWC-105", "notes": "Critical vulnerability in Polygon's MRC20 contract allowing arbitrary token minting. Lack of balance check in _transferFrom and missing validation for ecrecovery zero address return. Reported by Leon Spacewalker, fixed via hardfork on December 5, 2021. Blackhat exploited same vulnerability stealing 801,601 MATIC before fix. Second whitehat also reported same bug and received 500,000 MATIC reward."}


{"project_name": "Optimism", "project_category": "L2", "attack_title": "Infinite Money Duplication via Self-Destruct Bug in OVM 2.0", "vulnerability_type": "SWC-135 — Incorrect Calculation", "date_of_report": "2022-02-02", "bounty_paid_usd": 2000042, "impact_profit_usd": 0, "profit_token": {"token": "ETH", "amount": "unlimited"}, "reproduction_steps": ["1. Create exploit contract with self-destruct and withdrawal functions", "2. Self-destruct function sends contract balance to itself (inflating balance due to bug)", "3. Constructor calls self-destruct function multiple times in loop", "4. Call second internal function to transfer inflated funds to attacker", "5. Exploit contract destroyed at end of transaction"], "required_prerequisites": ["Understanding of OVM 2.0 architecture", "Knowledge of self-destruct opcode behavior", "Contract deployment capability"], "contract_addresses": ["0x4200000000000000000000000000000000000006"], "attack_tx_hashes": ["0x0000000000000000000000000000000000000000000000000000000000000002"], "sources": ["https://medium.com/immunefi/optimism-infinite-money-duplication-bugfix-review-daa6597146a0", "https://immunefi.com/bug-bounty/optimism/"], "poc_links": ["https://medium.com/immunefi/optimism-infinite-money-duplication-bugfix-review-daa6597146a0"], "swc_id": "SWC-135", "notes": "Critical vulnerability in Optimism's OVM 2.0 implementation allowing infinite ETH duplication. Bug in self-destruct logic where stateObject balance was set to zero without updating OVM_ETH contract state. Reported by Jay Freeman (Saurik), creator of Cydia. Maximum bounty of $2,000,042 paid. Demonstrates complexity of Layer 2 state management."}


{"project_name": "Arbitrum", "project_category": "L2", "attack_title": "Bridge Initialization Bug Leading to ETH Loss", "vulnerability_type": "SWC-118 — Incorrect Constructor", "date_of_report": "2023-09-20", "bounty_paid_usd": 400000, "impact_profit_usd": 250000000, "profit_token": {"token": "ETH", "amount": "400"}, "reproduction_steps": ["1. Identify bad initializers in Arbitrum bridge contract code", "2. Exploit initialization vulnerability during bridge setup", "3. Manipulate bridge state to redirect ETH transfers", "4. Extract compromised ETH from bridge contract"], "required_prerequisites": ["Understanding of bridge initialization process", "Knowledge of proxy contract patterns", "Access to bridge deployment transactions"], "contract_addresses": ["0x8315177aB297bA92A06054cE80a67Ed4DBd7ed3a"], "attack_tx_hashes": ["0x0000000000000000000000000000000000000000000000000000000000000003"], "sources": ["https://immunefi.com/bug-bounty/arbitrum/", "https://blockworks.co/news/arbitrum-saved-from-major-eth-loss-by-white-hat-hacker"], "poc_links": ["https://immunefi.com/bug-bounty/arbitrum/"], "swc_id": "SWC-118", "notes": "Critical vulnerability in Arbitrum bridge initialization that could have compromised over $250 million in ETH. White hat hacker received 400 ETH bounty via Immunefi. Bug was caused by improper initializers in bridge contract code."}
{"project_name": "Compound", "project_category": "DeFi", "attack_title": "Interest Rate Model Manipulation", "vulnerability_type": "SWC-101 — Integer Overflow and Underflow", "date_of_report": "2024-11-15", "bounty_paid_usd": 150000, "impact_profit_usd": 50000000, "profit_token": {"token": "COMP", "amount": "10000"}, "reproduction_steps": ["1. Identify integer overflow vulnerability in interest rate calculations", "2. Create large position to trigger overflow condition", "3. Manipulate interest rates to favorable values", "4. Extract excess tokens from protocol"], "required_prerequisites": ["Large capital for position creation", "Understanding of Compound interest rate model", "Knowledge of integer overflow conditions"], "contract_addresses": ["0x3d9819210A31b4961b30EF54bE2aeD79B9c9Cd3B"], "attack_tx_hashes": ["0x0000000000000000000000000000000000000000000000000000000000000004"], "sources": ["https://immunefi.com/bug-bounty/compoundfinance/", "https://compound.finance/docs/security"], "poc_links": ["https://github.com/compound-finance/compound-protocol"], "swc_id": "SWC-101", "notes": "Integer overflow vulnerability in Compound's interest rate model allowing manipulation of borrowing rates. Reported through Immunefi bug bounty program. Fixed by implementing SafeMath library and additional bounds checking."}
{"project_name": "Aave", "project_category": "DeFi", "attack_title": "Flash Loan Reentrancy in executeFlashLoan Function", "vulnerability_type": "SWC-107 — Reentrancy", "date_of_report": "2023-05-15", "bounty_paid_usd": 100000, "impact_profit_usd": 30000000, "profit_token": {"token": "AAVE", "amount": "5000"}, "reproduction_steps": ["1. Initiate flash loan through Aave protocol", "2. In callback function, trigger reentrancy by calling executeFlashLoan again", "3. Exploit state inconsistency during nested calls", "4. Extract funds before original flash loan completes"], "required_prerequisites": ["Understanding of flash loan mechanics", "Knowledge of reentrancy attack patterns", "Contract deployment capability"], "contract_addresses": ["0x7d2768dE32b0b80b7a3454c06BdAc94A69DDc7A9"], "attack_tx_hashes": ["0x0000000000000000000000000000000000000000000000000000000000000005"], "sources": ["https://immunefi.com/bug-bounty/aave/", "https://stermi.medium.com/aave-v3-bug-bounty-part-1-security-concerns-and-improvements-about-the-executeflashloan-function-47a91fd4c067"], "poc_links": ["https://github.com/aave/bug-bounty"], "swc_id": "SWC-107", "notes": "Reentrancy vulnerability in Aave v3 executeFlashLoan function allowing nested flash loan calls. Reported through official bug bounty program. Fixed by implementing proper reentrancy guards and state checks."}
{"project_name": "Uniswap", "project_category": "DeFi", "attack_title": "Price Oracle Manipulation via Flash Swap", "vulnerability_type": "SWC-136 — Unencrypted Private Data On-Chain", "date_of_report": "2023-08-10", "bounty_paid_usd": 75000, "impact_profit_usd": 20000000, "profit_token": {"token": "UNI", "amount": "3000"}, "reproduction_steps": ["1. Execute large flash swap to manipulate pool price", "2. Use manipulated price in external protocol oracle call", "3. Extract value from price-dependent operations", "4. Repay flash swap to complete attack"], "required_prerequisites": ["Large flash swap capability", "Understanding of AMM price mechanics", "Access to price-dependent protocols"], "contract_addresses": ["0x1F98431c8aD98523631AE4a59f267346ea31F984"], "attack_tx_hashes": ["0x0000000000000000000000000000000000000000000000000000000000000006"], "sources": ["https://immunefi.com/bug-bounty/uniswap/", "https://docs.uniswap.org/concepts/protocol/oracle"], "poc_links": ["https://github.com/Uniswap/v3-core"], "swc_id": "SWC-136", "notes": "Price oracle manipulation vulnerability in Uniswap v3 allowing temporary price distortion through flash swaps. Reported through bug bounty program. Mitigated by implementing time-weighted average price (TWAP) oracles."}


{"project_name": "Alchemix", "project_category": "DeFi", "attack_title": "Multiple Critical Vulnerabilities in Alchemix Protocol", "vulnerability_type": "SWC-107 — Reentrancy", "date_of_report": "2024-11-15", "bounty_paid_usd": 150000, "impact_profit_usd": 50000000, "profit_token": {"token": "ALCX", "amount": "multiple"}, "reproduction_steps": ["1. Identify reentrancy vulnerabilities in Alchemix lending protocol", "2. Exploit flash loan integration with yield farming", "3. Manipulate collateral ratios during liquidation", "4. Extract excess collateral through reentrancy"], "required_prerequisites": ["Understanding of DeFi yield farming", "Flash loan access", "Knowledge of Alchemix protocol mechanics"], "contract_addresses": ["0x0000000000000000000000000000000000000000"], "attack_tx_hashes": ["0x0000000000000000000000000000000000000000000000000000000000000000"], "sources": ["https://reports.immunefi.com/alchemix", "https://immunefi.com/audit-competitions/"], "poc_links": ["https://reports.immunefi.com/alchemix"], "swc_id": "SWC-107", "notes": "Immunefi Audit Competition revealed 70+ critical vulnerabilities in Alchemix protocol. Multiple reentrancy issues, flash loan vulnerabilities, and yield farming exploits discovered. Competition format allowed comprehensive security review."}
{"project_name": "BadgerDAO eBTC", "project_category": "DeFi", "attack_title": "Flash Loan Fee Bypass and Reentrancy Issues", "vulnerability_type": "SWC-107 — Reentrancy", "date_of_report": "2024-10-20", "bounty_paid_usd": 75000, "impact_profit_usd": 15000000, "profit_token": {"token": "eBTC", "amount": "unlimited"}, "reproduction_steps": ["1. Exploit flash loan function with no fee requirement", "2. Use reentrancy in ActivePool to borrow without collateral", "3. Manipulate CDP (Collateralized Debt Position) accounting", "4. Extract eBTC tokens through liquidation abuse"], "required_prerequisites": ["Understanding of Bitcoin DeFi mechanics", "Knowledge of CDP systems", "Flash loan access"], "contract_addresses": ["0x0000000000000000000000000000000000000000"], "attack_tx_hashes": ["0x0000000000000000000000000000000000000000000000000000000000000000"], "sources": ["https://reports.immunefi.com/badgerdao-ebtc", "https://immunefi.com/audit-competitions/"], "poc_links": ["https://reports.immunefi.com/badgerdao-ebtc"], "swc_id": "SWC-107", "notes": "BadgerDAO eBTC protocol audit revealed 20 vulnerabilities including flash loan fee bypass and multiple reentrancy issues. Bitcoin DeFi protocol with unique CDP mechanics. No critical vulnerabilities but significant design improvements needed."}
{"project_name": "Kinetiq", "project_category": "Other", "attack_title": "Buffer Management and Slashing Event Vulnerabilities", "vulnerability_type": "SWC-135 — Incorrect Calculation", "date_of_report": "2025-04-16", "bounty_paid_usd": 200000, "impact_profit_usd": 100000000, "profit_token": {"token": "HYPE", "amount": "locked"}, "reproduction_steps": ["1. Queue withdrawal before slashing event occurs", "2. Cancel withdrawal to exploit buffer management flaw", "3. HYPE tokens become locked in contract without proper accounting", "4. Exploit L1/L2 synchronization issues"], "required_prerequisites": ["Understanding of staking mechanisms", "Knowledge of L1/L2 bridge operations", "Access to validator operations"], "contract_addresses": ["0x0000000000000000000000000000000000000000"], "attack_tx_hashes": ["0x0000000000000000000000000000000000000000000000000000000000000000"], "sources": ["https://code4rena.com/reports/2025-04-kinetiq", "https://code4rena.com/reports"], "poc_links": ["https://code4rena.com/reports/2025-04-kinetiq"], "swc_id": "SWC-135", "notes": "Code4rena audit of Kinetiq staking protocol revealed 3 high-severity vulnerabilities. Buffer silently locks staked HYPE, slashing event timing issues, and L1/L2 state synchronization problems. Complex staking mechanism with 1,332 lines of Solidity code."}
{"project_name": "Sprinter Stash", "project_category": "Bridge", "attack_title": "Cross-Chain Security Vulnerabilities", "vulnerability_type": "SWC-122 — Lack of Proper Signature Verification", "date_of_report": "2025-05-27", "bounty_paid_usd": 125000, "impact_profit_usd": 25000000, "profit_token": {"token": "Multi", "amount": "variable"}, "reproduction_steps": ["1. Exploit cross-chain message verification", "2. Manipulate bridge state between chains", "3. Double-spend tokens across different chains", "4. Extract funds from bridge contracts"], "required_prerequisites": ["Understanding of cross-chain protocols", "Knowledge of bridge mechanics", "Multi-chain deployment capability"], "contract_addresses": ["0x0000000000000000000000000000000000000000"], "attack_tx_hashes": ["0x0000000000000000000000000000000000000000000000000000000000000000"], "sources": ["https://cantina.xyz/portfolio", "https://cantina.xyz/"], "poc_links": ["https://cantina.xyz/portfolio"], "swc_id": "SWC-122", "notes": "Cantina security review of Sprinter cross-chain protocol. Multiple signature verification issues and bridge state manipulation vulnerabilities discovered. Cross-chain protocols face unique security challenges."}
{"project_name": "Virtuals Protocol", "project_category": "NFT", "attack_title": "AI NFT Protocol Security Issues", "vulnerability_type": "SWC-105 — Unprotected Ether Withdrawal", "date_of_report": "2025-05-24", "bounty_paid_usd": 80000, "impact_profit_usd": 10000000, "profit_token": {"token": "VIRTUAL", "amount": "1000000"}, "reproduction_steps": ["1. Exploit AI model integration vulnerabilities", "2. Manipulate NFT minting process", "3. Bypass access controls in virtual asset creation", "4. Extract protocol tokens through governance manipulation"], "required_prerequisites": ["Understanding of AI/NFT integration", "Knowledge of virtual asset protocols", "Access to AI model interfaces"], "contract_addresses": ["0x0000000000000000000000000000000000000000"], "attack_tx_hashes": ["0x0000000000000000000000000000000000000000000000000000000000000000"], "sources": ["https://cantina.xyz/portfolio", "https://cantina.xyz/"], "poc_links": ["https://cantina.xyz/portfolio"], "swc_id": "SWC-105", "notes": "Cantina audit of Virtuals Protocol combining AI and NFT technologies. Novel attack vectors related to AI model integration and virtual asset creation. Emerging category of Web3 protocols."}
{"project_name": "MarginSwap", "project_category": "DeFi", "attack_title": "Multiple DeFi Trading Vulnerabilities", "vulnerability_type": "SWC-107 — Reentrancy", "date_of_report": "2021-04-30", "bounty_paid_usd": 100000, "impact_profit_usd": 20000000, "profit_token": {"token": "MARGIN", "amount": "unlimited"}, "reproduction_steps": ["1. Exploit reentrancy bug to inflate balance", "2. Manipulate price feed through oracle manipulation", "3. Abuse liquidation logic with inconsistent interest application", "4. Extract tokens through registerTradeAndBorrow function"], "required_prerequisites": ["Understanding of margin trading", "Knowledge of DeFi price oracles", "Flash loan access"], "contract_addresses": ["0x0000000000000000000000000000000000000000"], "attack_tx_hashes": ["0x0000000000000000000000000000000000000000000000000000000000000000"], "sources": ["https://github.com/ZhangZhuoSJTU/Web3Bugs", "https://code4rena.com/reports/2021-04-marginswap"], "poc_links": ["https://github.com/ZhangZhuoSJTU/Web3Bugs"], "swc_id": "SWC-107", "notes": "Web3Bugs academic dataset - Contest 3. Multiple high-severity vulnerabilities including reentrancy, price manipulation, and liquidation logic flaws. Early DeFi protocol with fundamental security issues."}
{"project_name": "Vader Protocol", "project_category": "DeFi", "attack_title": "AMM and Governance Vulnerabilities", "vulnerability_type": "SWC-107 — Reentrancy", "date_of_report": "2021-04-30", "bounty_paid_usd": 150000, "impact_profit_usd": 50000000, "profit_token": {"token": "VADER", "amount": "unlimited"}, "reproduction_steps": ["1. Use flash loans to affect governance voting", "2. Exploit wrong liquidity units calculation", "3. Manipulate slippage protection on token trades", "4. Game vault rewards through timing attacks"], "required_prerequisites": ["Understanding of AMM mechanics", "Knowledge of governance systems", "Flash loan access"], "contract_addresses": ["0x0000000000000000000000000000000000000000"], "attack_tx_hashes": ["0x0000000000000000000000000000000000000000000000000000000000000000"], "sources": ["https://github.com/ZhangZhuoSJTU/Web3Bugs", "https://code4rena.com/reports/2021-04-vader"], "poc_links": ["https://github.com/ZhangZhuoSJTU/Web3Bugs"], "swc_id": "SWC-107", "notes": "Web3Bugs academic dataset - Contest 5. 23 high-severity vulnerabilities in AMM protocol. Flash loan governance attacks, liquidity calculation errors, and vault reward gaming. Complex DeFi protocol with multiple attack vectors."}
{"project_name": "Meebits", "project_category": "NFT", "attack_title": "NFT Signature and Transfer Vulnerabilities", "vulnerability_type": "SWC-122 — Lack of Proper Signature Verification", "date_of_report": "2021-04-30", "bounty_paid_usd": 75000, "impact_profit_usd": 5000000, "profit_token": {"token": "ETH", "amount": "variable"}, "reproduction_steps": ["1. Exploit signature malleability in ecrecover verification", "2. Transfer unowned NFTs through verification bypass", "3. Mint NFTs for free after sale period", "4. Manipulate trade validation for unminted tokens"], "required_prerequisites": ["Understanding of ECDSA signatures", "Knowledge of NFT standards", "Cryptographic signature manipulation"], "contract_addresses": ["0x0000000000000000000000000000000000000000"], "attack_tx_hashes": ["0x0000000000000000000000000000000000000000000000000000000000000000"], "sources": ["https://github.com/ZhangZhuoSJTU/Web3Bugs", "https://code4rena.com/reports/2021-04-meebits"], "poc_links": ["https://github.com/ZhangZhuoSJTU/Web3Bugs"], "swc_id": "SWC-122", "notes": "Web3Bugs academic dataset - Contest 6. NFT protocol vulnerabilities including signature malleability and arbitrary transfer of unowned tokens. Early NFT implementation with fundamental security flaws."}


{"project_name": "Sky (MakerDAO)", "project_category": "DeFi", "vulnerability_type": "Remote Code Execution", "swc_classification": "SWC-105", "severity": "Critical", "bounty_amount": 50000, "currency": "USD", "discovery_date": "2023-09-25", "fix_date": "2023-09-28", "discoverer": "xss", "platform": "Immunefi", "affected_component": "vote.makerdao.com", "attack_vector": "gray-matter library JavaScript engine", "impact_description": "Remote code execution on voting platform, system file access", "technical_details": "gray-matter library with JavaScript engine enabled allowed eval execution through — javascript argument injection", "reproduction_steps": "1. Create poll with malicious Markdown URL 2. Inject — javascript argument 3. Execute system commands via eval", "fix_description": "Implemented matterWrapper function with input validation and disabled JavaScript engine", "funds_at_risk": 0, "actual_loss": 0, "references": ["https://medium.com/immunefi/sky-remote-code-execution-bugfix-review-9bfbeb8c1c17"], "tags": ["RCE", "eval", "JavaScript", "input-validation"]}
{"project_name": "Belt Finance", "project_category": "DeFi", "vulnerability_type": "Logic Error", "swc_classification": "SWC-135", "severity": "Critical", "bounty_amount": 1050000, "currency": "USD", "discovery_date": "2021-09-30", "fix_date": "2021-09-30", "discoverer": "Anonymous", "platform": "Immunefi", "affected_component": "Strategy Contract", "attack_vector": "balanceSnapshot double counting", "impact_description": "Yield farm majority control with minority investment", "technical_details": "balanceSnapshot updated incorrectly causing double counting of withdrawals, leading to excessive share minting", "reproduction_steps": "1. Normal deposit 2. Direct wBNB transfer 3. Withdraw to trigger bug 4. Deposit for excessive shares 5. Call earn to fix balance 6. Withdraw profit", "fix_description": "Fixed conditional logic for balanceSnapshot updates to prevent double counting", "funds_at_risk": 50000000, "actual_loss": 0, "references": ["https://medium.com/immunefi/belt-finance-logic-error-bug-fix-postmortem-39308a158291"], "tags": ["logic-error", "yield-farming", "share-calculation", "BSC"]}
{"project_name": "Aurora", "project_category": "L2", "vulnerability_type": "Infinite Spend", "swc_classification": "SWC-112", "severity": "Critical", "bounty_amount": 6000000, "currency": "USD", "discovery_date": "2022-06-07", "fix_date": "2022-06-07", "discoverer": "pwning.eth", "platform": "Immunefi", "affected_component": "ExitToNear Contract", "attack_vector": "DELEGATECALL msg.value inheritance", "impact_description": "Infinite ETH inflation through bridge manipulation", "technical_details": "DELEGATECALL to ExitToNear inherited msg.value without actual ETH transfer, tricking Aurora Engine", "reproduction_steps": "1. Bridge ETH to Aurora 2. Deploy malicious contract 3. DELEGATECALL ExitToNear 4. Receive nETH on NEAR 5. Re-deposit to Aurora 6. Repeat", "fix_description": "Restricted DELEGATECALL to native contracts and enhanced ETH transfer verification", "funds_at_risk": 200000000, "actual_loss": 0, "references": ["https://medium.com/immunefi/aurora-infinite-spend-bugfix-review-6m-payout-e635d24273d"], "tags": ["delegatecall", "bridge", "inflation", "NEAR", "cross-chain"]}
{"project_name": "Alchemix", "project_category": "DeFi", "vulnerability_type": "Access Control", "swc_classification": "SWC-105", "severity": "High", "bounty_amount": 25000, "currency": "USD", "discovery_date": "2024-06-13", "fix_date": "2024-06-13", "discoverer": "Koiush", "platform": "Immunefi", "affected_component": "Access Control System", "attack_vector": "Improper access control configuration", "impact_description": "Unauthorized access to critical functions", "technical_details": "Improper configuration of access control allowed unauthorized users to access restricted functions", "reproduction_steps": "1. Identify misconfigured access control 2. Call restricted function without proper authorization", "fix_description": "Corrected access control configuration and added proper authorization checks", "funds_at_risk": 10000000, "actual_loss": 0, "references": ["https://medium.com/immunefi/alchemix-access-control-issue-bugfix-review-2a8fbcddf588"], "tags": ["access-control", "authorization", "configuration"]}
{"project_name": "The Graph", "project_category": "Infrastructure", "vulnerability_type": "Rounding Error", "swc_classification": "SWC-135", "severity": "High", "bounty_amount": 60000, "currency": "USD", "discovery_date": "2024-05-15", "fix_date": "2024-05-15", "discoverer": "Anonymous", "platform": "Immunefi", "affected_component": "Asset Calculation", "attack_vector": "Rounding errors in asset calculations", "impact_description": "Discrete impacts on multiple assets due to calculation errors", "technical_details": "Two separate rounding errors occurring in different assets causing calculation discrepancies", "reproduction_steps": "1. Trigger rounding error in first asset 2. Trigger rounding error in second asset 3. Observe discrete impacts", "fix_description": "Implemented precise calculation methods to eliminate rounding errors", "funds_at_risk": 5000000, "actual_loss": 0, "references": ["https://medium.com/immunefi/the-graph-rounding-error-bugfix-review-c946ff470f65"], "tags": ["rounding-error", "calculation", "precision"]}
{"project_name": "Raydium", "project_category": "DeFi", "vulnerability_type": "Tick Manipulation", "swc_classification": "SWC-135", "severity": "High", "bounty_amount": 80000, "currency": "USD", "discovery_date": "2024-07-15", "fix_date": "2024-07-15", "discoverer": "Anonymous", "platform": "Immunefi", "affected_component": "Liquidity Pool", "attack_vector": "Tick status manipulation in bitmap", "impact_description": "Liquidity adjustment manipulation at specific price points", "technical_details": "Manipulation allows attacker to flip tick status in bitmap, affecting liquidity adjustments", "reproduction_steps": "1. Identify target tick in bitmap 2. Manipulate tick status 3. Affect liquidity at specific prices", "fix_description": "Enhanced tick validation and bitmap integrity checks", "funds_at_risk": 15000000, "actual_loss": 0, "references": ["https://medium.com/immunefi/raydium-tick-manipulation-bugfix-review-c6aae4527ed6"], "tags": ["tick-manipulation", "liquidity", "AMM", "Solana"]}
{"project_name": "Sui", "project_category": "L1", "vulnerability_type": "Network Shutdown", "swc_classification": "SWC-113", "severity": "Critical", "bounty_amount": 200000, "currency": "USD", "discovery_date": "2023-10-13", "fix_date": "2023-10-13", "discoverer": "Anonymous", "platform": "Immunefi", "affected_component": "Validator Nodes", "attack_vector": "Validator node crash exploit", "impact_description": "Temporary total network shutdown capability", "technical_details": "Vulnerability allowed attacker to crash validator nodes causing network disruption", "reproduction_steps": "1. Identify validator crash vector 2. Execute crash exploit 3. Observe network shutdown", "fix_description": "Patched validator node crash vulnerability and enhanced resilience", "funds_at_risk": 1000000000, "actual_loss": 0, "references": ["https://medium.com/immunefi/sui-temporary-total-network-shutdown-bugfix-review-c271d0319dcc"], "tags": ["network-shutdown", "validator", "consensus", "DoS"]}
{"project_name": "Threshold Network", "project_category": "Infrastructure", "vulnerability_type": "Transaction Malleability", "swc_classification": "SWC-114", "severity": "High", "bounty_amount": 120000, "currency": "USD", "discovery_date": "2024-08-15", "fix_date": "2024-08-15", "discoverer": "Anonymous", "platform": "Immunefi", "affected_component": "SPV Proof Verifier", "attack_vector": "Bitcoin transaction malleability", "impact_description": "SPV proof verification bypass through transaction malleability", "technical_details": "Inherent Bitcoin transaction malleability combined with SPV proof verifier created vulnerability", "reproduction_steps": "1. Create malleable Bitcoin transaction 2. Submit to SPV verifier 3. Bypass proof verification", "fix_description": "Enhanced SPV proof verification to handle transaction malleability", "funds_at_risk": 30000000, "actual_loss": 0, "references": ["https://medium.com/immunefi/threshold-transaction-malleability-bugfix-review-cf0d2aa5437e"], "tags": ["transaction-malleability", "SPV", "Bitcoin", "proof-verification"]}
{"project_name": "Stacks", "project_category": "L2", "vulnerability_type": "Denial of Service", "swc_classification": "SWC-113", "severity": "High", "bounty_amount": 75000, "currency": "USD", "discovery_date": "2024-02-21", "fix_date": "2024-02-21", "discoverer": "Anonymous", "platform": "Immunefi", "affected_component": "Layer 2 Protocol", "attack_vector": "DoS attack on Bitcoin Layer 2", "impact_description": "Service disruption on Bitcoin Layer 2 smart contracts", "technical_details": "DoS vulnerability targeting Stacks Layer 2 for Bitcoin smart contracts and dApps", "reproduction_steps": "1. Identify DoS vector 2. Execute attack on Stacks L2 3. Observe service disruption", "fix_description": "Implemented DoS protection mechanisms and rate limiting", "funds_at_risk": 20000000, "actual_loss": 0, "references": ["https://medium.com/immunefi/stacks-dos-bugfix-review-dc0f2a75b276"], "tags": ["DoS", "Bitcoin-L2", "smart-contracts", "dApps"]}
{"project_name": "Aztec", "project_category": "Privacy", "vulnerability_type": "Multiple-Spend Error", "swc_classification": "SWC-114", "severity": "Critical", "bounty_amount": 150000, "currency": "USD", "discovery_date": "2023-11-29", "fix_date": "2023-11-29", "discoverer": "Anonymous", "platform": "Immunefi", "affected_component": "Privacy Protocol", "attack_vector": "Multiple spend vulnerability", "impact_description": "Complete TVL drainage capability", "technical_details": "Multiple-spend error would have allowed attacker to drain entire total value locked if unchecked", "reproduction_steps": "1. Identify multiple-spend vector 2. Execute spend duplication 3. Drain TVL", "fix_description": "Implemented spend validation and duplication prevention", "funds_at_risk": 100000000, "actual_loss": 0, "references": ["https://medium.com/immunefi/aztec-multiple-spend-error-bugfix-review-20074581d224"], "tags": ["multiple-spend", "privacy", "TVL-drain", "zero-knowledge"]}
{"project_name": "Silo Finance", "project_category": "DeFi", "vulnerability_type": "Logic Error", "swc_classification": "SWC-135", "severity": "High", "bounty_amount": 90000, "currency": "USD", "discovery_date": "2023-06-15", "fix_date": "2023-06-15", "discoverer": "Anonymous", "platform": "Immunefi", "affected_component": "Pool Contract", "attack_vector": "Logic error in pool contract", "impact_description": "Asset theft from Silo pool contract", "technical_details": "Logic error vulnerability could have allowed malicious hacker to steal assets from pool", "reproduction_steps": "1. Identify logic error 2. Exploit pool contract 3. Steal assets", "fix_description": "Corrected logic error and enhanced pool security", "funds_at_risk": 25000000, "actual_loss": 0, "references": ["https://medium.com/immunefi/silo-finance-logic-error-bugfix-review-35de29bd934a"], "tags": ["logic-error", "pool-contract", "asset-theft"]}
{"project_name": "zkSync", "project_category": "L2", "vulnerability_type": "Insufficient Proof Verification", "swc_classification": "SWC-123", "severity": "High", "bounty_amount": 100000, "currency": "USD", "discovery_date": "2024-02-09", "fix_date": "2024-02-09", "discoverer": "Anonymous", "platform": "Immunefi", "affected_component": "Proof System", "attack_vector": "Insufficient zero-knowledge proof verification", "impact_description": "Bypass of zero-knowledge proof verification", "technical_details": "Insufficient verification of zero-knowledge proofs could allow invalid state transitions", "reproduction_steps": "1. Create invalid proof 2. Submit to verification system 3. Bypass verification", "fix_description": "Enhanced proof verification with additional validation checks", "funds_at_risk": 50000000, "actual_loss": 0, "references": ["https://medium.com/immunefi/zksync-insufficient-proof-verification-bugfix-review-dcd57944d0e2"], "tags": ["zk-proof", "verification", "state-transition", "L2"]}
