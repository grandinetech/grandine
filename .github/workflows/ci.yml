name: CI Build

on: [push]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            backend: blst
          - os: windows-latest
            backend: blst
          - os: macos-latest
            backend: blst

    runs-on: ${{ matrix.os }}

    steps:
    - name: Disable autocrlf (Windows)
      if: runner.os == 'Windows'
      run: git config --global core.autocrlf false
    - uses: actions/checkout@v4
      with:
        submodules: true
        lfs: true
    # There should be no need to install Rustup or a Rust toolchain explicitly.
    # The `ubuntu-22.04` image already includes Rustup:
    # <https://github.com/actions/runner-images/blob/ubuntu22/20240401.4/images/ubuntu/Ubuntu2204-Readme.md#rust-tools>
    # Running `rustc` or Cargo should automatically install the toolchain specified in `rust-toolchain.toml`.
    - uses: Swatinem/rust-cache@v2
    - name: Run cargo build
      run: cargo build --release --no-default-features --features default-networks,${{ matrix.backend }}
    - name: Check if code is formatted (Linux)
      if: runner.os == 'Linux'
      run: cargo fmt --check
    - name: Run Clippy (Linux)
      if: runner.os == 'Linux'
      run: scripts/ci/clippy.bash --deny warnings
    # It's a known issue that networking tests randomly fails on Macos
    - name: Run tests
      if: runner.os == 'Macos'
      run: cargo test --release --no-fail-fast --no-default-features --features ${{ matrix.backend }} -- --skip behaviour --skip common
    - name: Run tests
      if: runner.os != 'Macos'
      run: cargo test --release --no-fail-fast --no-default-features --features ${{ matrix.backend }}
    - name: Check consensus-spec-tests coverage (Linux)
      if: runner.os == 'Linux'
      run: scripts/ci/consensus-spec-tests-coverage.rb
